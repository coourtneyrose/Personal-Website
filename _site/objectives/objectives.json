[
  {
    "path": "objectives/2021-12-09-numberone/",
    "title": "Import, Manage, and Clean Data",
    "description": {},
    "author": [
      {
        "name": "Courtney Rose",
        "url": {}
      }
    ],
    "date": "2021-12-16",
    "categories": [],
    "contents": "\n\n\n\nThe goal:\nTo show my understanding of the learning objectives and provide evidence, I chose two data sets about the nutrition facts of Starbucks’ drinks and food. I hope to use these data sets to showcase what I have learned about R throughout the semester.\n1. I can import data from a variety of sources.\n\n\ndrinks <- read_csv(\n\"~/STA 518/Course Project/Personal-Website/_objectives/2021-12-09-numberone/starbucks_drinkMenu_expanded.csv\"\n)\n\nfood <- read_excel(\n\"~/STA 518/Course Project/Personal-Website/_objectives/2021-12-09-numberone/starbucks-food.xls\"\n)\n\n\n\nThe drinks data set is in tidy data format.The food data set is not in tidy data format, so I will fix that later on.The above code chunk proves that I can import data from two external source, a .csv file and a .xls file. I downloaded these data sets onto my computer from Kaggle, then I uploaded the file into R Studio, then read it into my code. Since I downloaded more than one type of file, I think this gives me sufficent evidence to say I can import files from a variety of sources.\n2. I can write professional reports using R Markdown.\nThis entire website is made with R Markdown, so I am hoping that is sufficient proof of understanding for this subobjective.\n3. I can isolate information from a larger data source.\nI am starting with the drinks data set. I am going to isolate the drinks that contain coffee or espresso. Coffee is usually my drink of choice, so I want to compare between the different types. This includes coffee, classic and signature espresso drinks, iced coffee, and frappuccinos.\n\n\ncoffee <- drinks[c(1:102, 155:166, 182:229), ]\n\n\n\n\nThe above code chunk subsetted the imported data set into a smaller dataset that only contains drinks with coffee or espresso. The first few rows and columns can be seen in the attached photo above.\nI also usually get my drinks with nonfat milk, so I filtered the dataset, as seen in the code chunk below, to only drinks that were made with nonfat milk. This data is only 59 observations compared to the 242 observations that I started with.\n\n\nnonfat <- filter(coffee, str_detect(Beverage_prep, \"Nonfat\"))\n\n\n\nNow this data set only contains drinks with coffee and espresso that are made with nonfat milk.4. I can restructure information to be in a “tidy” format.\nThe drinks data set is already tidy, but the food data set is not. It has all variables in one column that are separated by commas.\n\n\ntidyfood <- food %>%\nseparate(`, Calories, Fat (g), Carb. (g), Fiber (g), Protein (g)`, \n         into = \n           c(\"Name\", \n             \"Calories\", \n             \"Fat\", \n             \"Carbohydrates\", \n              \"Fiber\", \n             \"Protein\"), \n         sep = \",\")\n\n\n\nNow this data is tidy!Now this data set is tidy, because it fits all three criteria for tidy data. I know that there are other functions for making data tidy, like pivot_longer() or pivot_wider(), but I did not need to use any of those functions to make my data tidy. I think my example proves that I can recognize untidy data and make it tidy, so I feel like I have a good understanding of this subobjective.\n5. I can combine information from multiple data sources.\nI want to combine the filtered down drink data set with the food data set. First, I selected the columns that were in both, then changed the names to make them the same, then I used union() to combine the datasets.\n\n\nfiltereddrinks <- nonfat %>%\n  select(\"Beverage\", \n         \"Calories\", \n         \"Total Fat (g)\", \n         \"Total Carbohydrates (g)\", \n         \"Dietary Fibre (g)\", \n         \"Protein (g)\") %>%\n  set_names(c(\"Name\", \n              \"Calories\", \n              \"Fat\", \n              \"Carbohydrates\", \n              \"Fiber\", \n              \"Protein\"))\n\n\nfooddrink <- rbind(filtereddrinks, tidyfood)\n\n\n\nI combined all the food and drink observations, so I combined information from two data sources.\n6. I can transform information to be in a format better suited for specific tasks.\nA specific task I will do is summarize the calories, sugar, and carbohydrates by each beverage category. I will use the filtered drink data set, which only contains the nonfat, coffee/espresso drinks.\n\n\nnonfat %>%\n  group_by(Beverage_category) %>%\n  summarise(\n    avg_calories = mean(Calories), \n    avg_sugar = mean(`Sugars (g)`), \n    avg_carbs = mean(`Total Carbohydrates (g)`))\n\n\n# A tibble: 5 x 4\n  Beverage_category                  avg_calories avg_sugar avg_carbs\n  <chr>                                     <dbl>     <dbl>     <dbl>\n1 Classic Espresso Drinks                    134.      20.4      119.\n2 Frappuccino® Blended Coffee               268.      58        231.\n3 Frappuccino® Light Blended Coffee         162.      32.4      218.\n4 Shaken Iced Beverages                      117.      26         35 \n5 Signature Espresso Drinks                  233.      39.1      153.\n\n\n\n\n",
    "preview": "objectives/2021-12-09-numberone/bitmoji_logo.png",
    "last_modified": "2021-12-16T14:16:17+00:00",
    "input_file": "numberone.knit.md"
  },
  {
    "path": "objectives/2021-12-09-numberfive/",
    "title": "Write clear, efficient, and well-documented R programs.",
    "description": {},
    "author": [
      {
        "name": "Courtney Rose",
        "url": {}
      }
    ],
    "date": "2021-12-10",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": "objectives/2021-12-09-numberfive/write.png",
    "last_modified": "2021-12-10T15:55:17+00:00",
    "input_file": {}
  },
  {
    "path": "objectives/2021-12-09-numberfour/",
    "title": "Use source documentation and other I can identify and correct common errors and in R programs.",
    "description": {},
    "author": [
      {
        "name": "Courtney Rose",
        "url": {}
      }
    ],
    "date": "2021-12-10",
    "categories": [],
    "contents": "\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill at https://rstudio.github.io/distill.\n\n\n\n",
    "preview": "objectives/2021-12-09-numberfour/identify.png",
    "last_modified": "2021-12-10T15:50:42+00:00",
    "input_file": {}
  },
  {
    "path": "objectives/2021-12-09-numberthree/",
    "title": "Write R programs for simulations from probability models and randomization-based experiments.",
    "description": {},
    "author": [
      {
        "name": "Courtney Rose",
        "url": {}
      }
    ],
    "date": "2021-12-10",
    "categories": [],
    "contents": "\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill at https://rstudio.github.io/distill.\n\n\n\n",
    "preview": "objectives/2021-12-09-numberthree/experiments.png",
    "last_modified": "2021-12-10T15:49:33+00:00",
    "input_file": {}
  },
  {
    "path": "objectives/2021-12-09-numbertwo/",
    "title": "Create graphical displays  and numerical summaries of data for exploratory analysis and presentations.",
    "description": {},
    "author": [
      {
        "name": "Courtney Rose",
        "url": {}
      }
    ],
    "date": "2021-12-10",
    "categories": [],
    "contents": "\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill at https://rstudio.github.io/distill.\n\n\n\n",
    "preview": "objectives/2021-12-09-numbertwo/graphs.png",
    "last_modified": "2021-12-10T15:48:01+00:00",
    "input_file": {}
  }
]
